{"version":3,"sources":["components/Generator/InputSection/InputSection.module.scss","components/Navbar/logo.svg","components/Navbar/logo-text.svg","components/Navbar/Navbar.js","components/Generator/InputSection/InputSection.js","components/Generator/InfoInput/InfoInput.js","components/Generator/InfoFormGroup/InfoFormGroup.js","components/Generator/inputDefaults.js","components/Generator/Signature/Signature.js","components/Generator/Generator.js","components/NotFound/NotFound.js","components/Footer/Footer.js","components/App/App.js","serviceWorker.js","index.js","components/Generator/Generator.module.scss"],"names":["module","exports","header","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","logo_ref","react_default","a","createElement","id","x1","x2","y1","y2","offset","stopColor","logo_ref2","fill","fillRule","d","logo_SvgLogo","props","viewBox","__webpack_require__","p","logo_text_extends","logo_text_ref","logo_text_SvgLogoText","CustomNavbar","Container_default","Navbar_default","className","Brand","as","Link","to","classNames","aria-label","height","InputSection","_ref","title","collapse","children","_useState","useState","_useState2","slicedToArray","collapsed","setCollapsed","Card_default","Header","styles","onClick","index_es","icon","faChevronUp","faChevronDown","Collapse_default","in","Body","defaultProps","InfoInput","_ref$input","input","enabled","value","placeholder","disabled","objectWithoutProperties","Form_default","Control","type","AddOn","InputGroupAddon","InputGroup","InputGroup_default","Text","InfoFormGroup","_ref2","name","onChange","required","CustomInput","customInput","append","prepend","normalizedName","replace","str","toUpperCase","inputProps","objectSpread","Group","Form","Row","controlId","Label","column","sm","lg","Col_default","Check","custom","checked","concat","label","InfoFormGroup_AddOn","Generator_InfoInput_InfoInput","Signature","inputs","_Object$keys$reduce","keys","reduce","acc","_inputs$key","firstName","lastName","email","phone","site","salutation","_image","image","maxImageSize","imageSize","borderRadius","linkColor","showLine","role","company","companySite","width","setImageSize","gravatar","url","size","default","SignatureImage","src","alt","style","boxSizing","borderStyle","useEffect","img","Image","onload","ratioX","ratioY","ratio","Math","min","adjustedImageSize","_ref3","href","color","lineHeight","lang","xmlns","wordWrap","WebkitNbspMode","lineBreak","overflow","margin","border","borderTop","display","marginInlineStart","marginInlineEnd","cellPadding","cellSpacing","paddingLeft","fontWeight","Fragment","fontSize","PhoneNumber","getNumber","inputDefault","undefined","inputDefaults","options","facebook","twitter","instagram","linkedIn","pinterest","youTube","companyFacebook","companyTwitter","companyInstagram","companyLinkedIn","companyPinterest","companyYouTube","Generator","copied","setCopied","_useState3","_useState4","setInputs","ConnectedSignature","Generator_Signature_Signature","signatureString","renderToStaticMarkup","inputReducer","defineProperty","enableAssociatedInputReducer","handleChange","handleCopied","event","preventDefault","onSubmit","Row_default","xl","Generator_InputSection_InputSection","map","autoFocus","Generator_InfoFormGroup_InfoFormGroup","phoneEvent","_ref4","option","_ref6","_ref6$target","_ref5","lib","enableAlpha","body","preview","react_copy_to_clipboard_lib","text","onCopy","Button_default","variant","faCheck","faClipboard","fixedWidth","bg","code","NotFound","Helmet_default","faMapMarkerQuestion","Footer","Date","getFullYear","rel","packageInfo","version","App","BrowserRouter","Navbar_Navbar","defaultTitle","process","titleTemplate","Switch","Route","path","exact","component","components_Footer_Footer","unregister","Boolean","window","location","hostname","match","asyncToGenerator","regenerator_default","mark","_callee4","wrap","_context4","prev","next","navigator","serviceWorker","ready","sent","stop","rootElement","document","getElementById","hasChildNodes","hydrate","components_App_App","render"],"mappings":"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","file":"static/js/main.30fa9906.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"InputSection_header__1iHX1\"};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"defs\", null, React.createElement(\"linearGradient\", {\n  id: \"a\",\n  x1: \"50%\",\n  x2: \"50%\",\n  y1: \"0%\",\n  y2: \"100%\"\n}, React.createElement(\"stop\", {\n  offset: \"0%\",\n  stopColor: \"#FFBC00\"\n}), React.createElement(\"stop\", {\n  offset: \"100%\",\n  stopColor: \"#FF8700\"\n})));\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"url(#a)\",\n  fillRule: \"nonzero\",\n  d: \"M432.46 107.88l52.264-51.889 66.29 66.29-68.595 69.06.578.472a46.85 46.85 0 0 1 17.002 36.123v256.338c0 25.888-20.987 46.875-46.875 46.875H46.874C20.988 531.149 0 510.162 0 484.274V227.908c.003-12.222 7.668-28.44 17.109-36.202 1.69-1.386 21.446-17.304 45.39-36.552V124.9c0-17.256 13.995-31.25 31.25-31.25h45.372c4.003-3.193 7.49-5.986 9.96-7.949C171.25 67.986 207.803 31.15 250 31.15c42.423 0 79.327 37.295 100.908 54.551 2.432 1.933 5.928 4.717 9.962 7.949h45.38c10.979 0 20.637 5.665 26.211 14.23zM406.25 268.03l-13.126 13.215H294.51c-15.742-.303-29.873-9.15-36.953-23.281-2.88-5.781-7.9-6.367-9.931-6.367-2.032 0-7.05.576-9.785 6.045l-7.491 14.98c-6.22 12.48-24.443 11.103-28.789-2.041l-16.435-49.287-10.362 31.133a42.16 42.16 0 0 1-40.039 28.838h-12.099c-8.633 0-15.625-6.992-15.625-15.625s6.992-15.625 15.625-15.625h12.1c4.716 0 8.896-3.008 10.39-7.48l17.764-53.36c3.222-9.58 12.148-16.025 22.246-16.025a23.425 23.425 0 0 1 22.236 16.026l13.555 40.663c19.287-15.81 52.793-9.473 64.453 13.828 1.845 3.692 5.36 6.026 9.14 6.328l31.241.006v-36.178l80.499-79.92V124.9h-312.5v169.277c31.592 25.4 63.77 51.21 84.561 67.714 16.456 13.125 49.023 44.63 71.69 44.258 22.675.362 55.233-31.133 71.689-44.247 20.79-16.505 52.988-42.325 84.56-67.716V268.03zm31.25-31.463v32.473c11.455-9.228 21.855-17.618 31.25-25.186v-15.918c0-4.677-2.061-9.061-5.664-12.04a682.76 682.76 0 0 0-2.8-2.27l-22.786 22.94zM249.999 62.4c-21.171 0-43.525 16.338-61.62 31.25h123.28C293.593 78.728 271.26 62.4 250 62.4zM31.25 227.908v15.946c9.269 7.471 19.99 16.113 31.25 25.176v-73.779c-14.198 11.426-24.335 19.59-25.546 20.586a15.58 15.58 0 0 0-5.703 12.07zM599.715 38.404c9.717 9.706 9.717 25.459 0 35.165l-26.611 26.612-66.289-66.29 26.611-26.61c9.707-9.708 25.46-9.708 35.166 0l31.123 31.123z\"\n});\n\nvar SvgLogo = function SvgLogo(props) {\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 607 532\"\n  }, props), _ref, _ref2);\n};\n\nexport default __webpack_public_path__ + \"static/media/logo.80c91025.svg\";\nexport { SvgLogo as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#FF8700\",\n  fillRule: \"nonzero\",\n  d: \"M0 63.052l11.875-11.14c7.46 9.038 23.854 9.458 24.38 1.472.21-4.204-6.62-6.62-12.716-7.461C11.56 44.03.631 36.465.631 22.278.63 7.671 13.87 0 27.533 0c9.037 0 17.76 2.522 25.43 11.875l-12.295 9.457c-7.776-8.301-21.122-7.986-21.437.631.21 3.573 4.098 5.675 9.878 6.936 13.24 2.417 26.482 7.04 25.64 25.325-.63 14.397-15.762 22.279-29.423 22.279-8.933 0-18.39-4.519-25.326-13.451zM81.652 1.05v74.4h-18.81v-74.4h18.81zm65.258 14.817l-15.762 7.251c-4.099-9.983-20.702-7.671-20.702 2.102v25.536c0 11.664 21.752 11.56 21.752 0v-2.733h-11.874V32.261h29.95v18.496c0 17.129-14.292 25.746-29.215 25.746-14.712 0-29.424-8.617-29.424-25.746V25.22C91.635 8.407 106.347 0 121.06 0c9.668 0 20.702 3.993 25.851 15.868zm12.085 59.584V1.05h18.81l15.659 36.36 15.763-36.36h18.81v74.4h-18.916l.106-21.437 1.156-15.027-.631-.105-9.773 25.536h-12.926l-9.983-25.536-.525.105 1.26 15.027v21.438h-18.81zM276.377 1.05l26.586 74.4h-20.176l-4.834-14.921h-19.861l-4.624 14.922H233.29L259.248 1.05h17.129zm-14.082 42.77h11.14l-5.15-21.753h-.525l-5.465 21.753zm64.523-15.238l20.177-27.532h23.434l-29.424 35.94 29.319 38.46h-23.855l-19.02-26.586-.631.84v25.747h-18.916V1.05h18.916v27.532zm67.36-9.878v11.56h30.16v16.288h-30.16v11.14h32.787v17.759h-51.807V1.05h51.807v17.654h-32.787zm82.388 56.747l-17.234-23.645h-3.363v23.645h-19.02V1.05h29.739c15.342 0 27.217 7.04 27.637 24.485 0 13.766-5.57 21.543-14.607 24.38L500 75.452h-23.434zm-20.597-39.828h11.034c11.875 0 11.875-17.024 0-17.024h-11.034v17.024z\"\n});\n\nvar SvgLogoText = function SvgLogoText(props) {\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 500 77\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/media/logo-text.27994848.svg\";\nexport { SvgLogoText as ReactComponent };","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { ReactComponent as Logo } from './logo.svg';\nimport { ReactComponent as LogoText } from './logo-text.svg';\n\nconst CustomNavbar = () => (\n    <Container>\n        <Navbar className=\"px-0\">\n            <Navbar.Brand\n                as={Link}\n                to=\"/\"\n                className={classNames('d-flex', 'align-items-center')}\n                aria-label=\"Sigmaker\"\n            >\n                <Logo height={40} className=\"mr-2\" />\n                <LogoText height={20} />\n            </Navbar.Brand>\n        </Navbar>\n    </Container>\n);\n\nexport default CustomNavbar;\n","import React, { useState } from 'react';\nimport { string, bool, oneOfType, arrayOf, node } from 'prop-types';\nimport classNames from 'classnames';\nimport Collapse from 'react-bootstrap/Collapse';\nimport Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronDown, faChevronUp } from '@fortawesome/pro-solid-svg-icons';\nimport styles from './InputSection.module.scss';\n\nconst InputSection = ({ title, collapse, children }) => {\n    const [collapsed, setCollapsed] = useState(collapse);\n\n    const handleCollapse = () => setCollapsed(!collapsed);\n\n    return (\n        <Card as=\"section\">\n            <Card.Header\n                className={classNames(\n                    styles.header,\n                    'px-3',\n                    'py-2',\n                    'd-flex',\n                    'align-items-center',\n                    'justify-content-between',\n                    'bg-light'\n                )}\n                onClick={handleCollapse}\n            >\n                <b>{title}</b>\n                <small>\n                    <FontAwesomeIcon\n                        icon={collapsed ? faChevronUp : faChevronDown}\n                    />\n                </small>\n            </Card.Header>\n            <Collapse in={!collapsed}>\n                <Card.Body>{children}</Card.Body>\n            </Collapse>\n        </Card>\n    );\n};\n\nInputSection.propTypes = {\n    title: string.isRequired,\n    collapse: bool,\n    children: oneOfType([node, arrayOf(node)]).isRequired\n};\n\nInputSection.defaultProps = {\n    collapse: false\n};\n\nexport default InputSection;\n","import React from 'react';\nimport { shape, string, bool, oneOfType, node, arrayOf } from 'prop-types';\nimport Form from 'react-bootstrap/Form';\n\nconst InfoInput = ({\n    input: { enabled, value, placeholder },\n    disabled,\n    children,\n    ...props\n}) => (\n    <Form.Control\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled || !enabled}\n        {...props}\n    >\n        {children}\n    </Form.Control>\n);\n\nInfoInput.propTypes = {\n    input: shape({}).isRequired,\n    type: string,\n    disabled: bool,\n    children: oneOfType([node, arrayOf(node)])\n};\n\nInfoInput.defaultProps = {\n    type: 'text',\n    disabled: false,\n    children: null\n};\n\nexport default InfoInput;\n","import React from 'react';\nimport {\n    string,\n    shape,\n    bool,\n    oneOfType,\n    arrayOf,\n    func,\n    node\n} from 'prop-types';\nimport classNames from 'classnames';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport InfoInput from '../InfoInput';\n\nconst AddOn = ({ type, children }) => {\n    const InputGroupAddon = InputGroup[type];\n    return children ? (\n        <InputGroupAddon>\n            <InputGroup.Text>{children}</InputGroup.Text>\n        </InputGroupAddon>\n    ) : null;\n};\n\nAddOn.propTypes = {\n    type: string.isRequired,\n    children: oneOfType([node, arrayOf(node)])\n};\n\nAddOn.defaultProps = {\n    children: null\n};\n\nconst InfoFormGroup = ({\n    name,\n    input,\n    onChange,\n    required,\n    disabled,\n    customInput: CustomInput,\n    append,\n    prepend,\n    ...props\n}) => {\n    const normalizedName = name\n        .replace(/([A-Z])/g, ' $1')\n        .replace(/^./, str => str.toUpperCase());\n    const inputProps = { name, input, onChange, required, disabled, ...props };\n    return (\n        <Form.Group as={Form.Row} controlId={name}>\n            {required || disabled ? (\n                <Form.Label column sm={3} lg={4}>\n                    <span className=\"pl-sm-4\">{normalizedName}</span>\n                </Form.Label>\n            ) : (\n                <Col\n                    sm={3}\n                    lg={4}\n                    className={classNames('d-flex', 'align-items-center')}\n                >\n                    <Form.Check\n                        custom\n                        checked={input.enabled}\n                        type=\"checkbox\"\n                        name={name}\n                        id={`${name}-checkbox`}\n                        aria-label={`Enable ${name}`}\n                        label={normalizedName}\n                        onChange={onChange}\n                    />\n                </Col>\n            )}\n            <Col>\n                {CustomInput ? (\n                    <CustomInput {...inputProps} />\n                ) : (\n                    <InputGroup>\n                        <AddOn type=\"Prepend\">{prepend}</AddOn>\n                        <InfoInput {...inputProps} />\n                        <AddOn type=\"Append\">{append}</AddOn>\n                    </InputGroup>\n                )}\n            </Col>\n        </Form.Group>\n    );\n};\n\nInfoFormGroup.propTypes = {\n    name: string.isRequired,\n    input: shape({}).isRequired,\n    onChange: func.isRequired,\n    required: bool,\n    disabled: bool,\n    customInput: oneOfType([node, arrayOf(node), func]),\n    append: oneOfType([node, arrayOf(node), func]),\n    prepend: oneOfType([node, arrayOf(node), func])\n};\n\nInfoFormGroup.defaultProps = {\n    required: false,\n    disabled: false,\n    customInput: null,\n    append: null,\n    prepend: null\n};\n\nexport default InfoFormGroup;\n","const inputDefault = (placeholder = '', enabled = false, value = '') => ({\n    placeholder,\n    enabled,\n    value\n});\n\nconst checkboxDefault = value => inputDefault(value, value, value);\n\nexport default {\n    salutation: {\n        ...inputDefault('Best', true),\n        options: [\n            'Best',\n            'Regards',\n            'Best Regards',\n            'Sincerely',\n            'Warmly',\n            'Thanks',\n            'From',\n            'Love',\n            'Merry Christmas',\n            \"Don't contact me ever again\"\n        ]\n    },\n    firstName: inputDefault('Jon', true),\n    lastName: inputDefault('Doe', true),\n    email: inputDefault('jdoe@protonmail.com', true),\n    phone: inputDefault('(555) 555-5555', true),\n    site: inputDefault('https://jondoe.com', true),\n    image: inputDefault('https://jondoe.com/avatar.png', false),\n    imageSize: inputDefault(65, false, 65),\n    borderRadius: inputDefault(4, false, 4),\n    linkColor: inputDefault('#ff8700', false, undefined),\n    showLine: checkboxDefault(true),\n    facebook: inputDefault(''),\n    twitter: inputDefault(''),\n    instagram: inputDefault(''),\n    linkedIn: inputDefault(''),\n    pinterest: inputDefault(''),\n    youTube: inputDefault(''),\n    role: inputDefault('Chief Executive Dog Walker'),\n    company: inputDefault('Pyramid Scheme, Inc.'),\n    companySite: inputDefault('https://pyramids-r-us.com'),\n    companyFacebook: inputDefault(''),\n    companyTwitter: inputDefault(''),\n    companyInstagram: inputDefault(''),\n    companyLinkedIn: inputDefault(''),\n    companyPinterest: inputDefault(''),\n    companyYouTube: inputDefault('')\n};\n","import React, { useState, useEffect } from 'react';\nimport { shape, string, oneOfType, node, arrayOf } from 'prop-types';\nimport PhoneNumber from 'awesome-phonenumber';\nimport gravatar from 'gravatar';\n\nconst phoneUri = value =>\n    new PhoneNumber(value, 'US').getNumber('rfc3966') || `tel:${value}`;\n\nconst lineHeight = 1.5;\n\nconst Signature = ({ inputs }) => {\n    const {\n        firstName,\n        lastName,\n        email,\n        phone,\n        site,\n        salutation,\n        image: _image,\n        imageSize: maxImageSize,\n        borderRadius,\n        linkColor,\n        showLine,\n        role,\n        company,\n        companySite\n    } = Object.keys(inputs).reduce((acc, key) => {\n        const { enabled, value, placeholder } = inputs[key];\n        if (enabled)\n            acc[key] =\n                value === '' || typeof value === 'undefined'\n                    ? placeholder\n                    : value;\n        return acc;\n    }, {});\n\n    const [imageSize, setImageSize] = useState({\n        width: maxImageSize,\n        height: maxImageSize\n    });\n\n    const image =\n        _image === 'https://jondoe.com/avatar.png' || _image === ''\n            ? gravatar.url(email, { size: 300, default: 'retro' })\n            : _image;\n\n    const adjustedImageSize = ({ width, height }) => {\n        const ratioX = maxImageSize / width;\n        const ratioY = maxImageSize / height;\n        const ratio = Math.min(ratioX, ratioY);\n        const newWidth = ratio * width;\n        const newHeight = ratio * height;\n        return { width: newWidth, height: newHeight };\n    };\n\n    const SignatureImage = () => (\n        <img\n            src={image}\n            width={imageSize.width}\n            height={imageSize.height}\n            alt={`${firstName} ${lastName}`}\n            style={{\n                boxSizing: 'border-box',\n                borderStyle: 'none',\n                borderRadius: `${borderRadius}px`,\n                ...imageSize\n            }}\n        />\n    );\n\n    useEffect(() => {\n        const img = new Image();\n        img.src = image;\n        img.onload = () => setImageSize(adjustedImageSize(img));\n    }, [image]);\n\n    const Link = ({ children, href, style, ...props }) => (\n        <a\n            href={href}\n            style={{\n                color: linkColor || '#0000ee',\n                lineHeight,\n                ...style\n            }}\n            {...props}\n        >\n            {children}\n        </a>\n    );\n\n    Link.propTypes = {\n        children: oneOfType([node, arrayOf(node)]).isRequired,\n        href: string.isRequired,\n        style: shape({})\n    };\n\n    Link.defaultProps = {\n        style: {}\n    };\n\n    return (\n        <html lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\">\n            <head>\n                <title />\n            </head>\n            <body\n                style={{\n                    wordWrap: 'break-word',\n                    WebkitNbspMode: 'space',\n                    lineBreak: 'after-white-space'\n                }}\n            >\n                {salutation},\n                <br />\n                {firstName}\n                {showLine && (\n                    <hr\n                        style={{\n                            boxSizing: 'content-box',\n                            height: 0,\n                            overflow: 'visible',\n                            margin: '1.5rem auto',\n                            border: 0,\n                            borderTop: '1px solid rgba(0,0,0,0.1)',\n                            display: 'block',\n                            marginInlineStart: 'auto',\n                            marginInlineEnd: 'auto'\n                        }}\n                    />\n                )}\n                <table\n                    border={0}\n                    cellPadding={0}\n                    cellSpacing={0}\n                    style={{\n                        width: '100%',\n                        ...(showLine ? {} : { margin: '1.5rem auto' })\n                    }}\n                >\n                    <tbody>\n                        <tr>\n                            {image && (\n                                <td style={{ width: imageSize.width }}>\n                                    {site ? (\n                                        <a href={site}>\n                                            <SignatureImage />\n                                        </a>\n                                    ) : (\n                                        <SignatureImage />\n                                    )}\n                                </td>\n                            )}\n                            <td style={image && { paddingLeft: 15 }}>\n                                <b\n                                    style={{\n                                        fontWeight: 'bolder',\n                                        lineHeight\n                                    }}\n                                >\n                                    {firstName} {lastName}\n                                </b>\n                                {role && (\n                                    <>\n                                        <br />\n                                        <span style={{ lineHeight }}>\n                                            {role}\n                                        </span>\n                                    </>\n                                )}\n                                {company && (\n                                    <>\n                                        {!role && <br />}\n                                        <span style={{ lineHeight }}>\n                                            {role && <> at </>}\n                                            {companySite ? (\n                                                <Link href={companySite}>\n                                                    {company}\n                                                </Link>\n                                            ) : (\n                                                company\n                                            )}\n                                        </span>\n                                    </>\n                                )}\n                                {site && (\n                                    <>\n                                        <br />\n                                        <span style={{ lineHeight }}>\n                                            <Link href={site}>{site}</Link>\n                                        </span>\n                                    </>\n                                )}\n                                {(phone || email) && (\n                                    <>\n                                        <br />\n                                        {email && (\n                                            <Link\n                                                href={`mailto:${email}`}\n                                                style={{\n                                                    fontSize: '80%'\n                                                }}\n                                            >\n                                                {email}\n                                            </Link>\n                                        )}\n                                        {email && phone && (\n                                            <>\n                                                {' '}\n                                                <span\n                                                    style={{\n                                                        fontSize: '80%',\n                                                        color: 'rgba(0,0,0,0.1)'\n                                                    }}\n                                                >\n                                                    |\n                                                </span>{' '}\n                                            </>\n                                        )}\n                                        {phone && (\n                                            <Link\n                                                href={phoneUri(phone)}\n                                                style={{\n                                                    fontSize: '80%'\n                                                }}\n                                            >\n                                                {phone}\n                                            </Link>\n                                        )}\n                                    </>\n                                )}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </body>\n        </html>\n    );\n};\n\nSignature.propTypes = {\n    inputs: shape({}).isRequired\n};\n\nexport default Signature;\n\nexport const signatureHeaderAndDoctype =\n    '<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">';\n","import React, { useState } from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport classNames from 'classnames';\nimport PhoneNumber from 'awesome-phonenumber';\nimport { Panel as ColorPicker } from 'rc-color-picker';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faClipboard } from '@fortawesome/pro-solid-svg-icons';\nimport InputSection from './InputSection';\nimport InfoInput from './InfoInput';\nimport InfoFormGroup from './InfoFormGroup';\nimport Signature, { signatureHeaderAndDoctype } from './Signature';\nimport inputDefaults from './inputDefaults';\nimport './color-picker.scss';\nimport styles from './Generator.module.scss';\n\nconst phoneNumber = value =>\n    new PhoneNumber(value, 'US').getNumber('national') || value;\n\nconst Generator = () => {\n    const [copied, setCopied] = useState(false);\n    const [inputs, setInputs] = useState(inputDefaults);\n\n    const ConnectedSignature = <Signature inputs={inputs} />;\n\n    const signatureString =\n        signatureHeaderAndDoctype + renderToStaticMarkup(ConnectedSignature);\n\n    const inputReducer = ({ name, type, value, checked: enabled }) => ({\n        ...inputs,\n        [name]: {\n            ...inputs[name],\n            ...(type === 'checkbox' ? { enabled } : { value, enabled: true })\n        }\n    });\n\n    const enableAssociatedInputReducer = (name, type, enabled) => ({\n        [name]: {\n            ...inputs[name],\n            ...(type === 'checkbox' ? { enabled } : {})\n        }\n    });\n\n    const handleChange = ({ target }) => {\n        setInputs(inputReducer(target));\n        setCopied(false);\n    };\n\n    const handleChangePhone = event => {\n        const phoneEvent = event;\n        phoneEvent.target.value = phoneNumber(phoneEvent.target.value);\n        handleChange(phoneEvent);\n    };\n\n    const handleChangeImage = ({ target }) => {\n        const { type, checked: enabled } = target;\n        setInputs({\n            ...inputReducer(target),\n            ...enableAssociatedInputReducer('imageSize', type, enabled),\n            ...enableAssociatedInputReducer('borderRadius', type, enabled)\n        });\n    };\n\n    const handleChangeColor = ({ color, target }) => {\n        if (color)\n            handleChange({\n                target: {\n                    name: 'linkColor',\n                    value: color\n                }\n            });\n        else if (target) handleChange({ target });\n    };\n\n    const handleCheckbox = ({ target: { name, checked } }) =>\n        setInputs({\n            ...inputs,\n            [name]: { ...inputs[name], value: checked }\n        });\n\n    const handleCopied = event => {\n        if (event.preventDefault) event.preventDefault();\n        setCopied(true);\n    };\n\n    return (\n        <Container className={classNames('mt-4', 'mb-5')}>\n            <Form onSubmit={handleCopied}>\n                <Row>\n                    <Col lg={6} xl={5}>\n                        <h1>Settings</h1>\n                        <div className=\"accordion\">\n                            <InputSection title=\"Personal Info\">\n                                <Form.Group as={Form.Row} controlId=\"firstName\">\n                                    <Form.Label column sm={3} lg={4}>\n                                        <span className=\"pl-sm-4\">Name</span>\n                                    </Form.Label>\n                                    {['firstName', 'lastName'].map(name => (\n                                        <Col\n                                            key={name}\n                                            className={`p${\n                                                name === 'firstName' ? 'r' : 'l'\n                                            }-2`}\n                                        >\n                                            <InfoInput\n                                                name={name}\n                                                input={inputs[name]}\n                                                autoFocus={name === 'firstName'}\n                                                required\n                                                onChange={handleChange}\n                                            />\n                                        </Col>\n                                    ))}\n                                </Form.Group>\n                                <InfoFormGroup\n                                    name=\"email\"\n                                    input={inputs.email}\n                                    onChange={handleChange}\n                                />\n                                <InfoFormGroup\n                                    name=\"phone\"\n                                    type=\"tel\"\n                                    input={inputs.phone}\n                                    onChange={handleChangePhone}\n                                    prepend=\"US\"\n                                />\n                            </InputSection>\n                            <InputSection title=\"Links\">\n                                <InfoFormGroup\n                                    name=\"site\"\n                                    type=\"url\"\n                                    input={inputs.site}\n                                    onChange={handleChange}\n                                />\n                            </InputSection>\n                            <InputSection title=\"Image\" collapse>\n                                <InfoFormGroup\n                                    name=\"image\"\n                                    input={inputs.image}\n                                    onChange={handleChangeImage}\n                                />\n                                <InfoFormGroup\n                                    name=\"imageSize\"\n                                    type=\"number\"\n                                    input={inputs.imageSize}\n                                    onChange={handleChange}\n                                    required={inputs.imageSize.enabled}\n                                    disabled={!inputs.imageSize.enabled}\n                                    append=\"px\"\n                                />\n                                <InfoFormGroup\n                                    name=\"borderRadius\"\n                                    type=\"number\"\n                                    input={inputs.borderRadius}\n                                    onChange={handleChange}\n                                    required={inputs.borderRadius.enabled}\n                                    disabled={!inputs.borderRadius.enabled}\n                                    append=\"px\"\n                                />\n                            </InputSection>\n                            <InputSection title=\"Company\" collapse>\n                                {['role', 'company'].map(name => (\n                                    <InfoFormGroup\n                                        key={name}\n                                        name={name}\n                                        input={inputs[name]}\n                                        onChange={handleChange}\n                                    />\n                                ))}\n                                <InfoFormGroup\n                                    name=\"companySite\"\n                                    type=\"url\"\n                                    input={inputs.companySite}\n                                    onChange={handleChange}\n                                />\n                            </InputSection>\n                            <InputSection title=\"Customize\" collapse>\n                                <InfoFormGroup\n                                    name=\"salutation\"\n                                    as=\"select\"\n                                    type=\"select\"\n                                    input={inputs.salutation}\n                                    onChange={handleChange}\n                                    required\n                                >\n                                    {inputs.salutation.options.map(option => (\n                                        <option key={option}>{option}</option>\n                                    ))}\n                                </InfoFormGroup>\n                                <Form.Group>\n                                    <Form.Check\n                                        custom\n                                        checked={inputs.showLine.value}\n                                        type=\"checkbox\"\n                                        name=\"showLine\"\n                                        id=\"showLine-checkbox\"\n                                        aria-label=\"Enable line\"\n                                        label=\"Show line\"\n                                        onChange={handleCheckbox}\n                                    />\n                                </Form.Group>\n                                <InfoFormGroup\n                                    name=\"linkColor\"\n                                    input={inputs.linkColor}\n                                    color={\n                                        inputs.linkColor.value ||\n                                        inputs.linkColor.placeholder\n                                    }\n                                    onChange={handleChangeColor}\n                                    customInput={props => (\n                                        <ColorPicker\n                                            enableAlpha={false}\n                                            {...props}\n                                        />\n                                    )}\n                                />\n                            </InputSection>\n                        </div>\n                    </Col>\n                    <Col\n                        lg={6}\n                        xl={7}\n                        className={classNames('mt-4', 'mt-lg-0')}\n                    >\n                        <h1>Preview</h1>\n                        <Card\n                            body\n                            className={classNames(styles.preview, 'mb-4')}\n                        >\n                            {ConnectedSignature}\n                        </Card>\n                        <div\n                            className={classNames(\n                                'mb-2',\n                                'd-flex',\n                                'align-items-center',\n                                'justify-content-between'\n                            )}\n                        >\n                            <h1 className=\"mb-0\">HTML Signature</h1>\n                            <CopyToClipboard\n                                text={signatureString}\n                                onCopy={handleCopied}\n                            >\n                                <Button\n                                    type=\"submit\"\n                                    variant={copied ? 'success' : 'primary'}\n                                >\n                                    <FontAwesomeIcon\n                                        icon={copied ? faCheck : faClipboard}\n                                        fixedWidth\n                                        className=\"mr-2\"\n                                    />\n                                    {copied ? 'Copied' : 'Copy'}\n                                </Button>\n                            </CopyToClipboard>\n                        </div>\n                        <Card\n                            as=\"pre\"\n                            body\n                            bg=\"light\"\n                            className={classNames(\n                                styles.code,\n                                'mb-0',\n                                'pre-scrollable'\n                            )}\n                        >\n                            {signatureString}\n                        </Card>\n                    </Col>\n                </Row>\n            </Form>\n        </Container>\n    );\n};\n\nexport default Generator;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport Helmet from 'react-helmet';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerQuestion } from '@fortawesome/pro-solid-svg-icons';\n\nconst NotFound = () => (\n    <Container className={classNames('py-5', 'text-center')}>\n        <Helmet>\n            <title>Not Found</title>\n        </Helmet>\n        <Row>\n            <Col>\n                <FontAwesomeIcon\n                    icon={faMapMarkerQuestion}\n                    size=\"5x\"\n                    className=\"mb-4 text-muted\"\n                />\n                <h1>Oops!</h1>\n                <p className=\"mb-4\">We couldn&apos;t find this page.</p>\n                <Button as={Link} to=\"/\" variant=\"primary\" type={null}>\n                    Go Home\n                </Button>\n            </Col>\n        </Row>\n    </Container>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport classNames from 'classnames';\nimport Container from 'react-bootstrap/Container';\nimport packageInfo from '../../../package.json';\n\nconst Footer = () => (\n    <Container\n        as=\"footer\"\n        className={classNames('my-4', 'text-center', 'text-muted')}\n    >\n        &copy; {new Date().getFullYear()}{' '}\n        <a\n            href=\"https://grantburry.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n        >\n            Grant Burry\n        </a>\n        <span className=\"mx-2\">&middot;</span>\n        {process.env.NODE_ENV === 'development' ? (\n            <span className=\"text-danger\">Development Mode</span>\n        ) : (\n            'All rights reserved'\n        )}\n        <br />\n        Version {packageInfo.version}\n    </Container>\n);\n\nexport default Footer;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from '../Navbar';\nimport Generator from '../Generator';\nimport NotFound from '../NotFound';\nimport Footer from '../Footer';\nimport './App.scss';\n\nconst App = () => (\n    <BrowserRouter>\n        <>\n            <Navbar />\n            <Helmet\n                defaultTitle={process.env.REACT_APP_TITLE}\n                titleTemplate={`${process.env.REACT_APP_TITLE} » %s`}\n            />\n            <Switch>\n                <Route path=\"/\" exact component={Generator} />\n                <Route component={NotFound} />\n            </Switch>\n            <Footer />\n        </>\n    </BrowserRouter>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nconst registerValidSW = async (swUrl, config) => {\n    try {\n        const registration = await navigator.serviceWorker.register(swUrl);\n        registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n                if (installingWorker.state === 'installed')\n                    if (navigator.serviceWorker.controller) {\n                        // At this point, the old content will have been purged and\n                        // the fresh content will have been added to the cache.\n                        // It's the perfect time to display a \"Update is available.\n                        // Please refresh.\" message in your web app.\n                        console.warn('Update is available. Please refresh.');\n                        // Execute callback\n                        if (config.onUpdate) config.onUpdate(registration);\n                    } else {\n                        // At this point, everything has been precached.\n                        // It's the perfect time to display a\n                        // \"App is cached for offline use.\" message.\n                        console.info('App is cached for offline use.');\n                        // Execute callback\n                        if (config.onSuccess) config.onSuccess(registration);\n                    }\n            };\n        };\n    } catch (error) {\n        console.error('Error during service worker registration:', error);\n    }\n};\n\nconst checkValidServiceWorker = async (swUrl, config) => {\n    try {\n        // Check if the service worker can be found. If it can't reload the page.\n        const response = fetch(swUrl);\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n            response.status === 404 ||\n            response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n            // No service worker found. Probably a different app. Reload the page.\n            const registration = await navigator.serviceWorker.ready;\n            await registration.unregister();\n            window.location.reload();\n            // Service worker found. Proceed as normal.\n        } else await registerValidSW(swUrl, config);\n    } catch {\n        console.info(\n            'No internet connection found. App is running in offline mode.'\n        );\n    }\n};\n\nexport const register = config => {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        if (publicUrl.origin !== window.location.origin) return;\n        window.addEventListener('load', async () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                await checkValidServiceWorker(swUrl, config);\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                await navigator.serviceWorker.ready;\n                console.info(\n                    'This app is being served cache-first by a service worker. To learn more, visit ' +\n                        'https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app'\n                );\n            }\n            // Is not localhost. Just register service worker.\n            else registerValidSW(swUrl, config);\n        });\n    }\n};\n\nexport const unregister = async () => {\n    if ('serviceWorker' in navigator) {\n        const registration = await navigator.serviceWorker.ready;\n        registration.unregister();\n    }\n};\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootElement = document.getElementById('root');\n\nif (rootElement.hasChildNodes()) hydrate(<App />, rootElement);\nelse render(<App />, rootElement);\n\n// Service Worker\n// https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preview\":\"Generator_preview__2hcau\",\"code\":\"Generator_code__rP7Jp\"};"],"sourceRoot":""}